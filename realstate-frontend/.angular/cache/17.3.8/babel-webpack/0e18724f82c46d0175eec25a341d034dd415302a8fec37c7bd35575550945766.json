{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.errorMessage = '';\n      this.loginForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const {\n          username,\n          password\n        } = this.loginForm.value;\n        this.authService.login(username, password).subscribe({\n          next: response => {\n            localStorage.setItem('token', response.access_token);\n            this.router.navigate(['/xtracto/agences']);\n          },\n          error: err => this.errorMessage = 'Erreur de connexion : ' + err.error.detail\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 15,\n        vars: 3,\n        consts: [[1, \"login-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"username\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Connexion\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n            i0.ɵɵtext(6, \"Nom d'utilisateur\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n            i0.ɵɵtext(10, \"Mot de passe\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 4);\n            i0.ɵɵtext(13, \"Se connecter\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, LoginComponent_p_14_Template, 2, 1, \"p\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".login-container[_ngcontent-%COMP%]{max-width:450px;margin:100px auto;padding:40px;background:linear-gradient(135deg,#1e3c72,#2a5298);border-radius:15px;box-shadow:0 10px 30px #0003;color:#fff;font-family:Poppins,sans-serif}h2[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:30px;text-transform:uppercase;letter-spacing:2px}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin-bottom:20px}label[_ngcontent-%COMP%]{display:block;font-size:1.1rem;margin-bottom:8px;font-weight:500}input[_ngcontent-%COMP%]{width:100%;padding:12px;border:none;border-radius:25px;font-size:1rem;background:#ffffffe6;transition:all .3s ease}input[_ngcontent-%COMP%]:focus{outline:none;background:#fff;box-shadow:0 0 10px #ffffff80}button[_ngcontent-%COMP%]{width:100%;padding:12px;background:#ff6f61;border:none;border-radius:25px;color:#fff;font-size:1.1rem;cursor:pointer;transition:background .3s ease}button[_ngcontent-%COMP%]:hover{background:#e65b50}button[_ngcontent-%COMP%]:disabled{background:#ccc;cursor:not-allowed}.error[_ngcontent-%COMP%]{color:#ffeb3b;text-align:center;margin-top:15px;font-size:.9rem}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}